Find Triplet with Given Sum | Find three numbers in an array that add up to a given sum. 

import java.util.*;
class Main {
    public static void main(String[] args) {
        int[] arr = {2, 4, 1, 5, 3};
        int target = 9;
        targetedSum(arr,target);
    }
    public static void targetedSum(int[] arr,int target){
        Arrays.sort(arr);                                     // Step 1: Sort the array to use two-pointer technique efficiently
        System.out.println(Arrays.toString(arr));            

        int currSum=0;
        for(int i=0;i<arr.length-2;i++){                          // Step 2: Loop to fix the first element of the triplet
            int left = i+1;                                        // Start just after the fixed element
            int right = arr.length-1;                              // Start from the end of the array
            while(left<right){                                      // Step 4: Use two pointers to find remaining two numbers
                currSum = arr[i] + arr[left] + arr[right];             // Calculate the sum of the triplet
                if(currSum == target){                                          // If sum matches target, print and return
                    System.out.println("Target found: "+ arr[i]+" "+ arr[left]+" "+ arr[right]);
                    return;                                                    // Exit after finding the first valid triplet
                }else if(currSum < target){                                   // If sum is too small, move left pointer to the right to increase sum
                    left++;
                }else{                                                           // If sum is too large, move right pointer to the left to decrease sum
                    right--;
                }
            }
        }
        System.out.println("No triphet found");
    }
}

output:
[1, 2, 3, 4, 5]
Target found: 1 3 5

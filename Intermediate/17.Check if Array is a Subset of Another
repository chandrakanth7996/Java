Check if Array is a Subset of Another | Check if one array is a subset of another array. |

import java.util.*;
class Main {
    public static void main(String[] args) {
        int[] arr1 = {1, 2, 3};
        int[] arr2 = {1, 2, 3, 4, 5};
        subsetElements(arr1,arr2);
    }
    public static void subsetElements(int[] arr1,int[] arr2){
        Set<Integer> hs = new HashSet<>();
        Set<Integer> hs1 = new HashSet<>();
        for(int num : arr1){
            hs.add(num);
        }
        for(int num : arr2){
            if(hs.contains(num)){
                hs1.add(num);
            }
        }
        System.out.println(hs1);
        if(hs1.equals(hs)){
            System.out.println("Array 1 is subset of array 2");
        }else {
            System.out.println("Array 1 is not subset of Array 2");
        }
    }
}

output:
[1, 2, 3]
Array 1 is subset of array 2


// 2nd method using HashMap - what if duplicates matter ?
import java.util.*;
class Main {
    public static void main(String[] args) {
        int[] arr1 = {1, 2, 3};
        int[] arr2 = {1, 2, 3, 4, 5};
        subsetElements(arr1,arr2);
    }
    public static void subsetElements(int[] arr1,int[] arr2){
       Map<Integer,Integer> hm1 = new HashMap<>();
       Map<Integer,Integer> hm2 = new HashMap<>();
       for(int num: arr1){
           hm1.put(num,hm1.getOrDefault(num,0)+1);
       }
       for(int num : arr2){
           hm2.put(num,hm2.getOrDefault(num,0)+1);
       }
       System.out.println(hm1);
       System.out.println(hm2);
       
       boolean isSubset = true;
       for(int key : hm1.keySet()){
           if(!hm2.containsKey(key) || hm2.get(key)<hm1.get(key)){                // If arr2 doesn’t have this element, or doesn't have enough copies of it → then it’s not a subset
               isSubset=false;
               break;
           }
       }
       if(isSubset){
           System.out.println("Array 1 is subset of array 2");
       }else {
           System.out.println("Array 1 is not subset of array 2");
       }
    }
}

output:
{1=1, 2=1, 3=1}
{1=1, 2=1, 3=1, 4=1, 5=1}
Array 1 is subset of array 2

explanation:  if (!hm2.containsKey(key) || hm2.get(key) < hm1.get(key))
This checks if the current element (key) exists in arr2.
true → it exists
false → it doesn’t
For key = 1: hm2.get(1) == hm1.get(1) → OK
For key = 2: hm2.get(2) < hm1.get(2) → ❌ not enough 2s in arr2
So the condition is true for key = 2, and we mark isSubset = false

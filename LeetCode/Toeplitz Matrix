/* 766. Toeplitz Matrix
Given an m x n matrix, return true if the matrix is Toeplitz. Otherwise, return false.
A matrix is Toeplitz if every diagonal from top-left to bottom-right has the same elements.
Example 1:
Input: matrix = [[1,2,3,4],[5,1,2,3],[9,5,1,2]]
Output: true
Explanation:
In the above grid, the diagonals are:
"[9]", "[5, 5]", "[1, 1, 1]", "[2, 2, 2]", "[3, 3]", "[4]".
In each diagonal all elements are the same, so the answer is True. */

// 1st way of solution using for loop. Time complexity - O(n2)
import java.util.*;
class HelloWorld {
    public static void main(String[] args) {
        int[][] arr = {{11,74,0,93},{40,11,74,0}};
        int r = arr.length;
        int c = arr[0].length;
        boolean flag = true;
        for(int i=0;i<r-1;i++){
            for(int j=0;j<c-1;j++){
// Inside the inner loop, the condition if (matrix[i][j] != matrix[i + 1][j + 1]) checks if the current element matrix[i][j] is equal to the element diagonally down-right matrix[i + 1][j + 1].
If they are not equal, set b to false.
                if(arr[i][j]!=arr[i+1][j+1]){ 
                    flag = false;
                }
            }
        }
        System.out.println(flag); // true
    }
}

// 2nd way of solution using function
class Solution {
    public boolean isValidFun(int[][] matrix, int y, int x){
        int r = matrix.length;
        int c = matrix[0].length;
        boolean flag = true;
        int i=y,j=x;
        int temp = matrix[i][j];
        while(i<r && j<c){
            if(matrix[i][j]!=temp){
                flag = false;
            }
            i++;
            j++;
        }
        return flag;
    }
    public boolean isToeplitzMatrix(int[][] matrix) {
        boolean ans = true;
        int r = matrix.length;
        int c = matrix[0].length;
        // Check diagonals starting from the top row
        for(int j=0;j<c;j++){
            boolean temp = isValidFun(matrix,0,j);
            if(temp==false){
                ans = false;
            }
        }
        // Check diagonals starting from the leftmost column
        for(int i=0;i<r;i++){
            boolean temp = isValidFun(matrix,i,0);
            if(temp==false){
                ans = false;
            }
        }
        return ans;
    }
}

The DNA sequence is composed of a series of nucleotides abbreviated as 'A', 'C', 'G', and 'T'.
For example, "ACGAATTCCG" is a DNA sequence.
When studying DNA, it is useful to identify repeated sequences within the DNA.
Given a string s that represents a DNA sequence, return all the 10-letter-long sequences (substrings) that occur more than once in a DNA molecule. You may return the answer in any order.
Example 1:
Input: s = "AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT"
Output: ["AAAAACCCCC","CCCCCAAAAA"]
Example 2:
Input: s = "AAAAAAAAAAAAA"
Output: ["AAAAAAAAAA"]

class Solution {
    public List<String> findRepeatedDnaSequences(String s) {
        Map<String,Integer> hm = new HashMap<>();
        for(int i=0;i<=s.length()-10;i++){                        // Loop through the string and get all substrings of length 10
            String str = s.substring(i,i+10);
            hm.put(str,hm.getOrDefault(str,0)+1);
        }

        List<String> list = new ArrayList<>();                     // Create a list to store the repeated sequences
        for(Map.Entry<String,Integer> item: hm.entrySet()){         // Iterate over the map entries and check for repeated sequences
            if(item.getValue()>1){
                list.add(item.getKey());
            }
        }
        return list;                                      // Return the list of repeated sequences
    }
}

/* 771 - You're given strings jewels representing the types of stones that are jewels, and stones representing the stones you have. Each character in stones is a type of stone you have. You want to know how many of the stones you have are also jewels.
Letters are case sensitive, so "a" is considered a different type of stone from "A".
Example 1:
Input: jewels = "aA", stones = "aAAbbbb"
Output: 3
Example 2:
Input: jewels = "z", stones = "ZZ"
Output: 0 */

//1st way of solution using brute force O(n2) - time complexity
class Solution {
    public int numJewelsInStones(String jewels, String stones) {
        int count = 0;
        for(int i=0;i<jewels.length();i++){
           for(int j=0;j<stones.length();j++){
            if(jewels.charAt(i) == stones.charAt(j)){
                count++;
            }
           }
        }
        return count;
    }
}

//2nd way of solution using HashMap O(n) - time complexity
class Solution {
    public int numJewelsInStones(String jewels, String stones) {
        HashMap<Character,Integer> hs = new HashMap<>();
        for(int i=0;i<stones.length();i++){
            char key = stones.charAt(i);
            hs.put(key,hs.getOrDefault(key,0)+1);
        }
        int ans=0;
        for(int i=0;i<jewels.length();i++){
            char ch = jewels.charAt(i);
            if(hs.containsKey(ch)){
                ans += hs.get(ch);
            }
        }
        return ans;
    }
}

Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M.
Symbol       Value
I             1
V             5
X             10
L             50
C             100
D             500
M             1000
Given a roman numeral, convert it to an integer.
Example 1:
Input: s = "III"
Output: 3
Explanation: III = 3.
Example 2:
Input: s = "LVIII"
Output: 58
Explanation: L = 50, V= 5, III = 3.
Example 3:
Input: s = "MCMXCIV"
Output: 1994
Explanation: M = 1000, CM = 900, XC = 90 and IV = 4.

// Solution using HashMap
class Solution {
    public int romanToInt(String s) {
        HashMap<Character,Integer> hm = new HashMap<>();
        hm.put('I',1);
        hm.put('V',5);
        hm.put('X',10);
        hm.put('L',50);
        hm.put('C',100);
        hm.put('D',500);
        hm.put('M',1000);
        int n = s.length();
        int res=0;
        for(int i=0;i<n;i++){
            if(i<n-1 &&                                      // Check if the current numeral is less than the next numeral
            hm.get(s.charAt(i))<hm.get(s.charAt(i+1))){        // Subtract the current value if it is less than the next one
                res -= hm.get(s.charAt(i));
            } else {
                res += hm.get(s.charAt(i));                  // Add the value if it is not less than the next one
            }
        }
        return res;
    }
}

// Explanation:
LVIII:  L    V   I    I    I
       +50  +5  +1   +1    +1
        check first element with second element
        if first element is less than second element then subtract. 
        if first element is greater than second element then add.   

1523. Count Odd Numbers in an Interval Range
Given two non-negative integers low and high. Return the count of odd numbers between low and high (inclusive).
Example 1:
Input: low = 3, high = 7
Output: 3
Explanation: The odd numbers between 3 and 7 are [3,5,7].
Example 2:
Input: low = 8, high = 10
Output: 1
Explanation: The odd numbers between 8 and 10 are [9].

class Solution {
    public int countOdds(int low, int high) {  
       return (high-low)/2 + (low%2!=0 || high%2!=0 ? 1:0);
    }
}

Explanation: 
(high - low) / 2 calculates the base number of odd numbers between low and high.
(low % 2 != 0 || high % 2 != 0 ? 1 : 0) checks if either low or high is odd. If either boundary is odd, it adds 1 to account for an extra odd number at the boundary.
example: 
low=21 high=22
(22 - 21) / 2 = 1 / 2 = 0.
low % 2 != 0 checks if 21 is odd, which is true.
high % 2 != 0 checks if 22 is odd, which is false.
add 1 to the result 

Write a function to find the longest common prefix string amongst an array of strings.
If there is no common prefix, return an empty string "".
Example 1:
Input: strs = ["flower","flow","flight"]
Output: "fl"
Example 2:
Input: strs = ["dog","racecar","car"]
Output: ""
Explanation: There is no common prefix among the input strings.


class Solution {
    public String longestCommonPrefix(String[] strs) {
        if(strs.length == 0) return "";
        String prefix = strs[0];                                    // Assume the first string in the array is the longest common prefix
        for(int i=1;i<strs.length;i++){                            // Loop through all the strings starting from the second one
            while(strs[i].indexOf(prefix) !=0){                    // While the current string does not start with the prefix, shrink the prefix from the end
                prefix = prefix.substring(0,prefix.length()-1);     // Shorten the prefix by removing the last character
                if(prefix.isEmpty()) return "";                     // If the prefix becomes empty, there is no common prefix, so return an empty string
            }
        }
        return prefix;
    }
}

// 2nd way of solution

import java.util.*;
class Main {
    public static void main(String[] args) {
        String[] strs = {"flower","flow","flight"};
        System.out.print(longestCommonPrefix(strs));
    }
    public static String longestCommonPrefix(String[] strs){
        if(strs.length==0){
            return "";
        }
        String prefix = strs[0];
        for(int i=1;i<strs.length;i++){
            while(!strs[i].startsWith(prefix)){
                prefix = prefix.substring(0, prefix.length()-1);
            }
        }
        return prefix;
    }
}

Explanation:
Step-by-step Execution:
Initial Setup:

prefix = "flower"
strs = {"flower", "flow", "flight"}
First Iteration (i = 1, strs[1] = "flow"):

Check if "flow" starts with "flower". It does not, so we shrink the prefix.
prefix = "flower" -> "flowe"
Check if "flow" starts with "flowe". It does not, so shrink again.
prefix = "flowe" -> "flow"
Now, "flow" starts with "flow", so we continue with this prefix.
Second Iteration (i = 2, strs[2] = "flight"):

Check if "flight" starts with "flow". It does not, so we shrink the prefix.
prefix = "flow" -> "flo"
Check if "flight" starts with "flo". It does not, so shrink again.
prefix = "flo" -> "fl"
Check if "flight" starts with "fl". It does, so we continue with this prefix.
End of Iteration:

At this point, we have gone through all the strings, and the longest common prefix found is "fl".
Return the Result:

The function returns the result: "fl".

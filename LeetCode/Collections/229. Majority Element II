Given an integer array of size n, find all elements that appear more than ⌊ n/3 ⌋ times.
Example 1:
Input: nums = [3,2,3]
Output: [3]
Example 2:
Input: nums = [1]
Output: [1]
Example 3:
Input: nums = [1,2]
Output: [1,2]
Constraints:
1 <= nums.length <= 5 * 104
-109 <= nums[i] <= 109

class Solution {
    public List<Integer> majorityElement(int[] nums) {
        int n = nums.length;
        HashMap<Integer,Integer> hm = new HashMap<>();
        for(int i=0;i<n;i++){
            int num = nums[i];
            hm.put(num,hm.getOrDefault(num,0)+1);
        }
        List<Integer> list = new ArrayList<>();
        for(int res: hm.keySet()){
            if(hm.get(res)>n/3){
                list.add(res);
            }
        }
        return list;
    }
}

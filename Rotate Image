Problem Statement:
You are given an n x n 2D matrix representing an image. Rotate the image by 90 degrees (clockwise).
Example:

Input: `matrix = [
[1, 2, 3],
[4, 5, 6],
[7, 8, 9]
]Output:[
[7, 4, 1],
[8, 5, 2],
[9, 6, 3]
]`


import java.util.*;
class Main {
    public static void main(String[] args) {
        int[][] arr = {{1,2,3},{4,5,6},{7,8,9}};
        int n = arr.length;
        //Transpose Triangle
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                int temp = arr[i][j];
                arr[i][j] = arr[j][i];
                arr[j][i] = temp;
            }
        }
        for(int[] num : arr){
            System.out.println(Arrays.toString(num));
        }
        
        //Reverse Triangle
        for(int i=0;i<n;i++){
        int left = 0;
        int right = n-1;
        while(left<right){
            int temp = arr[i][left];
            arr[i][left] = arr[i][right];
            arr[i][right] = temp;
            left++;
            right--;
            }
        }
        for(int[] num : arr){
            System.out.println(Arrays.toString(num));
        }
    }
}

Given a binary array (containing only 0s and 1s), find the maximum number of consecutive 1s in the array.
Input: [1, 1, 0, 1, 1, 1]
Output: 3
Explanation: The longest run of consecutive 1s is three.

import java.util.*;
class HelloWorld {
    public static int maxConsecutiveOnes(int[] arr){
        int n = arr.length;
        int l=0,r=0,ans=0;
        for(r=0;r<n;r++){
            if(arr[r]==0){
                l=r+1;
            } else {
                ans = Math.max(ans,r-l+1);
            }
        }
        return ans;
    }
    public static void main(String[] args) {
        int[] arr = {1, 1, 0, 1, 1, 1};
        int ans = maxConsecutiveOnes(arr);
        System.out.println(ans);
    }
}

Dry run:
Step	r	arr[r]	Action	      l	Current Length (r - l + 1)	  ans
1	    0	  1	  ans = max(0, 1)	0	      1	                        1
2	    1	  1	  ans = max(1, 2)	0	      2	                        2
3	    2	  0	  l = r + 1 = 3	  3	      â€”	                        2
4	    3	  1	  ans = max(2, 1)	3	      1	                        2
5	    4	  1	  ans = max(2, 2)	3	      2	                        2
6	    5	  1	  ans = max(2, 3)	3	      3	                        3

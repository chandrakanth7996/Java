Find All Numbers Disappeared in an Array
Given an array nums of size n where each number is between 1 and n (inclusive), some numbers appear once, and others are missing. Write a function to find all the numbers that are missing from the array.
Input: nums = [4,3,2,7,8,2,3,1]
Output: [5,6]

import java.util.*;
class HelloWorld {
    public static void main(String[] args) {
        int[] arr = {4,3,2,7,8,2,3,1};
        int n = arr.length;
        for(int i=0;i<n;i++){                // Mark elements in the array as visited by making the value at the corresponding index negative
            int num = arr[i];
            int index = Math.abs(num)-1;      // Calculate index by subtracting 1 (since index is zero-based)
            if(arr[index]>0){                // If the value at 'index' is positive, make it negative to mark it as visited
                arr[index]=-arr[index];      
            }
        }
        List<Integer> missingList = new ArrayList<>();    // Find the missing numbers
        for(int i=0;i<n;i++){
            if(arr[i]>0){                          // If the value at index 'i' is positive, it means the number (i + 1) was not in the array
                missingList.add(i+1);              // Add the missing number to the list
            }
        }
        System.out.println(missingList);
    }
}

First Loop: Mark Presence
We iterate through the array, marking the presence of each number by setting the value at the corresponding index to negative.

Step	i	num	index	arr after marking presence
1	    0	4	3	{4, 3, 2, -7, 8, 2, 3, 1}
2	    1	3	2	{4, 3, -2, -7, 8, 2, 3, 1}
3	    2	-2	1	{4, -3, -2, -7, 8, 2, 3, 1}
4	    3	-7	6	{4, -3, -2, -7, 8, 2, -3, 1}
5	    4	8	7	{4, -3, -2, -7, 8, 2, -3, -1}
6	    5	2	1	{4, -3, -2, -7, 8, 2, -3, -1}
7	    6	-3	2 (already neg)	{4, -3, -2, -7, 8, 2, -3, -1}
8	    7	-1	0	{-4, -3, -2, -7, 8, 2, -3, -1}

Second Loop: Collect Missing Numbers
Now, we check indices for positive values to identify missing elements.

Step	i	arr[i]	Result
1	    0	-4	(skip)
2	    1	-3	(skip)
3	    2	-2	(skip)
4	    3	-7	(skip)
5	    4	8	Add 5
6	    5	2	Add 6
7	    6	-3	(skip)
8	    7	-1	(skip)
Final Output: [5, 6]

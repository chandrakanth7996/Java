// 1st way of solution but it should work without duplicates
import java.util.*;
class Main {
    public static void sortedArray(int[] arr){
        int n = arr.length;
        Arrays.sort(arr);       //1,2,4,5,7,8
        System.out.println(arr[1]);
        System.out.println(arr[n-2]);
    }
    public static void main(String[] args) {
        int arr[] = {1,2,4,7,8,5}; 
        sortedArray(arr);
    }
}

// 2nd way of solution using streams
import java.util.*;
class Main {
    public static String sortedArray(int[] arr){
        if(arr == null || arr.length<2)
            return "Array should have atlest 2 elements";

        List<Integer> res = Arrays.stream(arr)
                        .distinct()
                        .sorted()
                        .boxed()
                        .toList();
       
       if(res.size()<2){
           return "There is no second largest element";
       }
       int smallest = res.get(1);
       int largest = res.get(res.size()-2);
       
       return smallest+" "+largest;  // 2 7
        
    }
    public static void main(String[] args) {
        int arr[] = {1,2,4,7,8,5}; 
        System.out.println(sortedArray(arr));
    }
}

// 3rd way of solution using in-build method
import java.util.*;
class Main {
    public static void main(String[] args) {
        int[] arr = {1,24,12,564,9};
        System.out.print(secondLargestElement(arr));
    }
    public static int secondLargestElement(int[] arr){
        Arrays.sort(arr);
        return arr[arr.length-2];
    }
}

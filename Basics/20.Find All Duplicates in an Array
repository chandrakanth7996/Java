Find All Duplicates in an Array
Given an integer array nums of length n where each element is in the range [1, n], some elements appear twice or more than twice, and others appear once. Write a function to return an array of all the integers that appear twice.
Input: int[] nums = {4,3,2,7,8,2,3,1}
Output: [2, 3]

// solution using HashMap
import java.util.*;
class HelloWorld {
    public static void main(String[] args) {
        int[] arr = {2, 2, 3, 3, 4, 4};
        int n = arr.length;
        HashMap<Integer,Integer> hm = new HashMap<>();
        for(int i=0;i<n;i++){
            int num = arr[i];
            hm.put(num,hm.getOrDefault(num,0)+1);             // frequency count
        }
        for(int res : hm.keySet()){                         
            if(hm.get(res)>=2){                                // checking the elements which are greater than equals 2
                System.out.print(res+" ");
            }
        }
    }
}

// 2nd way of solution
import java.util.*;
class HelloWorld {
    public static List<Integer> duplicates(int[] arr){
        int n = arr.length;
        int index=0;
        List<Integer> list = new ArrayList<>();
        for(int i=0;i<n;i++){
            int num = arr[i];
            index = Math.abs(num)-1;
            if(arr[index]<0){
                list.add(Math.abs(num));
            } else {
                arr[index]=-arr[index];
            }
        }
        return list;
    }
    public static void main(String[] args) {
       int[] arr = {4,3,2,7,8,2,3,1};
       System.out.println(duplicates(arr));
    }
}

Write a method in Java that takes an array of integers and moves all the zeros to the end while maintaining the relative order of the non-zero elements. The function should modify the original array in place.
Example: Move Zeros to End
Input: [0, 1, 0, 3, 12]
Output: [1, 3, 12, 0, 0] 

import java.util.*;
class HelloWorld {
    public static void main(String[] args) {
        int[] arr = {1,0,0,1,3,43};
        int n = arr.length;
        int index = 0;
        for(int i=0;i<n;i++){                // Place all non-zero elements at the beginning of the array
            if(arr[i]!=0){
                arr[index]=arr[i];
                index++;
            }
        }
        while(index<n){                      // Fill the rest of the array with zeros
            arr[index]=0;
            index++;
        }
        System.out.println(Arrays.toString(arr));
    }
}


// 2nd method
Move Zeros to End | Move all zeroes in an array to the end while maintaining order. 

import java.util.*;
class Main {
    public static void main(String[] args) {
        int[] arr = {1,2,0,0,2,3,4,5};
        System.out.println("Move zeroes to end: "+ moveZeroes(arr));
    }
    public static List<Integer> moveZeroes(int[] arr){
        List<Integer> list = new ArrayList<>();
       for(int num: arr){
           if(num!=0)
                list.add(num);
       }
        for(int num : arr){
            if(num==0)
                list.add(num);
        }
        return list;
    }
}

output:
Move zeroes to end: [1, 2, 2, 3, 4, 5, 0, 0]

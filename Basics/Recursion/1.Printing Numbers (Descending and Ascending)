What is Recursion?
Recursion is when a method calls itself to solve a smaller version of a problem.

3 Key Rules of Recursion:
Base Case – the condition when recursion should stop.
Recursive Case – where the method calls itself.
Progress – each recursive call should move toward the base case.

1: Print numbers from 5 to 1

import java.util.*;
class Main {
    public static void main(String[] args) {
        printDescending(5);
    }
    public static void printDescending(int n){
        if(n==0) return;                    // Base case
        System.out.print(n+" ");
        printDescending(n-1);                // Recursive call
        }
}

output:
5 4 3 2 1 


2. Print numbers from 1 to 3
import java.util.*;
class Main {
    public static void main(String[] args) {
        printAscending(3);
    }
    public static void printAscending(int n){
        if(n==0) return;
        printAscending(n-1);
        System.out.print(n+" ");
        }
}

output:
1 2 3 

explanation:
Calling:
printAscending(3)
 └── printAscending(2)
      └── printAscending(1)
           └── printAscending(0) → STOP

Coming back:
           ← print 1
      ← print 2
 ← print 3
